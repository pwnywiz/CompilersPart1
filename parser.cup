/**
 *  Package and Import Specifications
 */
import java_cup.runtime.*;

/**
 *  Usercode Components
 */
parser code {:
    // Connect this parser to a scanner!
    Scanner s;
    Parser(Scanner s){ this.s=s; }
:}

/* define how to connect to the scanner! */
scan with {: return s.next_token(); :};

/**
 *  Symbol Lists
 */

/* Terminals (tokens returned by the scanner). */
terminal            PLUS, LPAREN, RPAREN, EQUAL, COMMA, RBRACE, LBRACE, RPLBRACE, IF, ELSE;
terminal String     STR, STRING_LITERAL;

/*  Non terminals */
non terminal            expr_list;
non terminal String     def, defexec, body, argdef, argexec, more, more2, defexec2, argexec2;

/**
 *  Precedence Declarations
 */
 precedence left COMMA,STR;
 precedence left EQUAL;
 precedence left PLUS;
 precedence left LPAREN,RPAREN;
 precedence left RBRACE, LBRACE;
 precedence left RPLBRACE;
 precedence left IF,ELSE;

/**
 *  The Grammar Rules
*/

expr_list  ::= expr_list def:d                        {: System.out.println(d);  :}
             | expr_list defexec:de                   {: System.out.println(de); :}
             |
             ;

//  Exw enwsei to "}(" se RPLBRACE gia na mhn uparksei conflict me thn klhsh ths defexec
def        ::= STR:s LPAREN argdef:a1 RPLBRACE body:b RBRACE     {: RESULT = "(" + "define " + " (" + s  + a1 + ") " + b + ")"; :}
             ;

//  Ta orismata gia th dhlwsh sunarthshs
argdef     ::= argdef:a1 COMMA argdef:a2                           {: RESULT = " " + a1 + " " + a2;           :}
             | STR:s                                           {: RESULT = s;                     :}
             |                                                 {: RESULT = "";                     :}
             ;

//  H klhsh ths sunarthshs
defexec    ::= STR:s LPAREN argexec:ae RPAREN                     {: RESULT = "(" + s  + ae + ")";             :}
             ;

defexec2    ::= STR:s LPAREN argexec2:ae RPAREN                     {: RESULT = "(" + s  + ae + ")";             :}
             ;

//  Ta orismata gia thn klhsh sunarthshs
argexec    ::= more:m COMMA argexec:ae			      {: RESULT = " " + m + " " + ae; 	  :}
		         | more:m argexec:ae				          {: RESULT = " " + m + " " + ae;  :}
		         |								                    {: RESULT = "";           :}
             ;

argexec2   ::= more2:m COMMA argexec2:ae			      {: RESULT = " " + m + " " + ae; 	  :}
		         | more2:m argexec2:ae				          {: RESULT = " " + m + " " + ae;  :}
		         |								                    {: RESULT = "";           :}
             ;

more       ::= defexec2:de							              {: RESULT = de; 					 		 :}
             | more:m1 PLUS more:m2         	      {: RESULT = "("+"+"+m1+" "+m2+")";       :}
             | LPAREN more:m RPAREN	    		        {: RESULT = m;           		 		 :}
             | STRING_LITERAL:sl	                  {: RESULT = "\"" + sl + "\"";           		 		 :}
             ;

more2      ::= defexec2:de							              {: RESULT = de; 					 		 :}
             | more2:m1 PLUS more2:m2         	      {: RESULT = "("+"+"+m1+" "+m2+")";       :}
             | LPAREN more2:m RPAREN	    		        {: RESULT = m;           		 		 :}
             | STRING_LITERAL:sl	                  {: RESULT = "\"" + sl + "\"";           		 		 :}
             | STR:s                                         {: RESULT = s;                          :}
             ;

body       ::= body:b1 PLUS body:b2                          {: RESULT = "(string-append " + b1 + " " + b2 + ")"; :}
             | STRING_LITERAL:sl                             {: RESULT = "\"" + sl + "\"";                        :}
             | STR:s                                         {: RESULT = s;                                       :}
             |                                               {: RESULT = "";                                      :}
             ;
